{
  "i18next.i18nPaths": "/Users/Quani/Desktop/Ulbi Course/ulbi_project/public/locales,/Users/Quani/Desktop/Ulbi Course/ulbi_project/src/shared/config/i18n",
  "i18n-ally.localesPaths": ["public/locales", "src/shared/config/i18n"],
  "i18n-ally.keystyle": "flat",
  "css.validate": false,
  "less.validate": false,
  "scss.validate": false,
  "stylelint.enable": true,
  "stylelint.validate": ["css", "scss"],
  "folderTemplates.fileTemplates": {
    "Create Public API": [
      "export * from './ui/<FTName>'"
    ],
    "Create React FC + memo": [
      "import { memo } from 'react'",
      "import { useTranslation } from 'react-i18next'",
      "import { classNames, Mods } from 'shared/lib/helpers'",
      "",
      "import cls from './<FTName>.module.scss'",
      "",
      "export interface <FTName>Props {",
      "  className?: string",
      "}",
      "",
      "export const <FTName> = memo((props: <FTName>Props) => {",
      "  const { className } = props",
      "  const { t } = useTranslation()",
      "",
      "  const mods: Mods = {}",
      "  return (",
      "    <div ",
      "      data-testid='<FTName | lowercase>.test'",
      "      className={classNames(cls.<FTName | camelcase>, mods, [className])}",
      "    >",
      "      <FTName>",
      "    </div>",
      "  )",
      "})",
      "",
    ],
    "Create React Module SCSS": [
      ".<FTName | camelcase> {",
      "  // <FTName | camelcase>",
      "}",
      "",
    ],
    "Create Storybook": [
      "import { ComponentStory, ComponentMeta } from '@storybook/react'",
      "import { ThemeDecorator } from 'shared/config/storybook'",
      "import { Theme } from 'app/providers/ThemeProvider'",
      "",
      "import { <FTName>, <FTName>Props } from './<FTName>'",
      "",
      "export default {",
      "  title: 'shared/<FTName>',",
      "  component: <FTName>,",
      "  argTypes: {",
      "    backgroundColor: { control: 'color' },",
      "  },",
      "} as ComponentMeta<typeof <FTName>>",
      "",
      "const Template: ComponentStory<typeof <FTName>> = (args: <FTName>Props) => (",
      "  <div",
      "    style={{",
      "      display: 'flex',",
      "      alignItems: 'center',",
      "      justifyContent: 'center',",
      "      width: '100%',",
      "      height: '100vh',",
      "      backgroundColor: 'white',",
      "    }}",
      "  >",
      "    <<FTName> {...args} />",
      "  </div>",
      ")",
      "",
      "export const Default = Template.bind({})",
      "Default.args = {}",
      "",
      "export const DefaultDark = Template.bind({})",
      "DefaultDark.args = {}",
      "DefaultDark.decorators = [ThemeDecorator(Theme.DARK)]",
      "",
      "export const DefaultGreen = Template.bind({})",
      "DefaultGreen.args = {}",
      "DefaultGreen.decorators = [ThemeDecorator(Theme.GREEN)]",
      "",
    ],
    "Create Component Jest Test": [
      "import { screen } from '@testing-library/react'",
      "import { ComponentRender } from 'shared/lib/helpers/tests/ComponentRender'",
      "",
      "import { <FTName> } from './<FTName>'",
      "",
      "describe('<FTName> Component Test', () => {",
      "  test('Default Test', () => {",
      "    ComponentRender(<<FTName> />)",
      "    expect(screen.getByTestId('<FTName | lowercase>.test')).toBeInTheDocument()",
      "  })",
      "})",
      ""
    ],
    "Create Public API (page)": [
      "export { <FTName>Async as <FTName> } from './ui/<FTName>/<FTName>.async'"
    ],
    "Create React FC + memo (page)": [
      "import { memo } from 'react'",
      "import { useTranslation } from 'react-i18next'",
      "import { classNames, Mods } from 'shared/lib/helpers'",
      "",
      "import cls from './<FTName>.module.scss'",
      "",
      "export interface <FTName>Props {}",
      "",
      "export const <FTName> = (props: <FTName>Props) => {",
      "  const { t } = useTranslation('<FTName | camelcase>')",
      "",
      "  const mods: Mods = {}",
      "  return (",
      "    <div ",
      "      className={classNames(cls.<FTName | camelcase>, mods)}",
      "    >",
      "      <FTName>",
      "    </div>",
      "  )",
      "}",
      "",
      "export default memo(<FTName>)",
      "",
    ],
    "Create Storybook (page)": [
      "import { ComponentStory, ComponentMeta } from '@storybook/react'",
      "import { ThemeDecorator } from 'shared/config/storybook'",
      "import { Theme } from 'app/providers/ThemeProvider'",
      "",
      "import <FTName>, { <FTName>Props } from './<FTName>'",
      "",
      "export default {",
      "  title: 'pages/<FTName>',",
      "  component: <FTName>,",
      "  argTypes: {",
      "    backgroundColor: { control: 'color' },",
      "  },",
      "} as ComponentMeta<typeof <FTName>>",
      "",
      "const Template: ComponentStory<typeof <FTName>> = (args: <FTName>Props) => (",
      "  <<FTName> {...args} />",
      ")",
      "",
      "export const Default = Template.bind({})",
      "Default.args = {}",
      "",
      "export const DefaultDark = Template.bind({})",
      "DefaultDark.args = {}",
      "DefaultDark.decorators = [ThemeDecorator(Theme.DARK)]",
      "",
      "export const DefaultGreen = Template.bind({})",
      "DefaultGreen.args = {}",
      "DefaultGreen.decorators = [ThemeDecorator(Theme.GREEN)]",
      "",
    ],
    "Create Async Page": [
    "  import { lazy } from 'react'",
    "",
    "  export const <FTName>Async = lazy(",
    "   () => new Promise((resolve) => {",
    "     // @ts-ignore",
    "     // Искусственная задержка",
    "     setTimeout(() => resolve(import('./<FTName>')), 1500)",
    "   }),",
    "  )",
    ],
  },
  "folderTemplates.structures": [
    {
      "name": "Create shared Component",
      "customVariables": [],
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName>/index.ts",
          "template": "Create Public API",
        },
        {
          "fileName": "<FTName>/ui/<FTName>.tsx",
          "template": "Create React FC + memo"
        },
        {
          "fileName": "<FTName>/ui/<FTName>.module.scss",
          "template": "Create React Module SCSS"
        },
        {
          "fileName": "<FTName>/ui/<FTName>.stories.tsx",
          "template": "Create Storybook",
        },
        {
          "fileName": "<FTName>/ui/<FTName>.test.tsx",
          "template": "Create Component Jest Test",
        },
      ]
    },
    {
      "name": "Create page Component",
      "customVariables": [],
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName>/index.ts",
          "template": "Create Public API (page)",
        },
        {
          "fileName": "<FTName>/ui/<FTName>/<FTName>.tsx",
          "template": "Create React FC + memo (page)"
        },
        {
          "fileName": "<FTName>/ui/<FTName>/<FTName>.async.tsx",
          "template": "Create Async Page",
        },
        {
          "fileName": "<FTName>/ui/<FTName>/<FTName>.module.scss",
          "template": "Create React Module SCSS"
        },
        {
          "fileName": "<FTName>/ui/<FTName>/<FTName>.stories.tsx",
          "template": "Create Storybook (page)",
        },
      ]
    }
  ]
}
